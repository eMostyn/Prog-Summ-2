/*!
FullCalendar Moment Plugin v4.3.0
Docs & License: https://fullcalendar.io/
(c) 2019 Adam Shaw
*/
!(function (e, t) { typeof exports === 'object' && typeof module !== 'undefined' ? t(exports, require('moment'), require('fullcalendar')) : typeof define === 'function' && define.amd ? define(['exports', 'moment', 'fullcalendar'], t) : t((e = e || self).FullCalendar = e.FullCalendar || {}, e.moment, e.FullCalendar); }(this, function (e, t, n) { 'use strict'; var l = t; var r = n.createPlugin({ cmdFormatter: function (e, t) { var n = (function e (t) { var n = t.match(/^(.*?)\{(.*)\}(.*)$/); if (n) { var l = e(n[2]); return { head: n[1], middle: l, tail: n[3], whole: n[1] + l.whole + n[3] }; } return { head: null, middle: null, tail: null, whole: t }; }(e)); if (t.end) { var l = o(t.start.array, t.timeZone, t.start.timeZoneOffset, t.localeCodes[0]); var r = o(t.end.array, t.timeZone, t.end.timeZoneOffset, t.localeCodes[0]); return (function e (t, n, l, r) { if (t.middle) { var a = n(t.head); var o = e(t.middle, n, l, r); var u = n(t.tail); var i = l(t.head); var d = e(t.middle, n, l, r); var f = l(t.tail); if (a === i && u === f) return a + (o === d ? o : o + r + d) + u; } var c = n(t.whole); var m = l(t.whole); return c === m ? c : c + r + m; }(n, a(l), a(r), t.separator)); } return o(t.date.array, t.timeZone, t.date.timeZoneOffset, t.localeCodes[0]).format(n.whole); } }); function a (e) { return function (t) { return t ? e.format(t) : ''; }; } function o (e, t, n, r) { var a; return t === 'local' ? a = l(e) : t === 'UTC' ? a = l.utc(e) : l.tz ? a = l.tz(e, t) : (a = l.utc(e), n != null && a.utcOffset(n)), a.locale(r), a; }e.default = r, e.toDuration = function (e) { return l.duration(e); }, e.toMoment = function (e, t) { if (!(t instanceof n.Calendar)) throw new Error('must supply a Calendar instance'); return o(e, t.dateEnv.timeZone, null, t.dateEnv.locale.codes[0]); }, Object.defineProperty(e, '__esModule', { value: !0 }), e.globalPlugins && (e.globalPlugins.push(e.default), delete e.default); }));
