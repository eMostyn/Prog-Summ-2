/*!
FullCalendar RRule Plugin v4.3.0
Docs & License: https://fullcalendar.io/
(c) 2019 Adam Shaw
*/
!(function (e, r) { typeof exports === 'object' && typeof module !== 'undefined' ? r(exports, require('rrule'), require('fullcalendar')) : typeof define === 'function' && define.amd ? define(['exports', 'rrule', 'fullcalendar'], r) : r((e = e || self).FullCalendar = e.FullCalendar || {}, e.rrule, e.FullCalendar); }(this, function (e, r, t) { 'use strict'; var n = function () { return (n = Object.assign || function (e) { for (var r, t = 1, n = arguments.length; t < n; t++) for (var l in r = arguments[t])Object.prototype.hasOwnProperty.call(r, l) && (e[l] = r[l]); return e; }).apply(this, arguments); }; var l = { rrule: null, duration: t.createDuration }; var u = { parse: function (e, u, a) { if (e.rrule != null) { var f = t.refineProps(e, l, {}, u); var s = (function (e, t) { var l; var u = null; if (typeof e === 'string')l = r.rrulestr(e); else if (typeof e === 'object' && e) { var a = n({}, e); if (typeof a.dtstart === 'string') { var f = t.createMarkerMeta(a.dtstart); f ? (a.dtstart = f.marker, u = f.isTimeUnspecified) : delete a.dtstart; } typeof a.until === 'string' && (a.until = t.createMarker(a.until)), a.freq != null && (a.freq = i(a.freq)), a.wkst != null ? a.wkst = i(a.wkst) : a.wkst = (t.weekDow - 1 + 7) % 7, a.byweekday != null && (a.byweekday = (function (e) { if (Array.isArray(e)) return e.map(i); return i(e); }(a.byweekday))), l = new r.RRule(a); } if (l) return { rrule: l, allDayGuess: u }; return null; }(f.rrule, a)); if (s) return { typeData: s.rrule, allDayGuess: s.allDayGuess, duration: f.duration }; } return null; }, expand: function (e, r) { return e.between(r.start, r.end, !0).filter(function (e) { return e.valueOf() < r.end.valueOf(); }); } }; var a = t.createPlugin({ recurringTypes: [u] }); function i (e) { return typeof e === 'string' ? r.RRule[e.toUpperCase()] : e; }e.default = a, Object.defineProperty(e, '__esModule', { value: !0 }), e.globalPlugins && (e.globalPlugins.push(e.default), delete e.default); }));
